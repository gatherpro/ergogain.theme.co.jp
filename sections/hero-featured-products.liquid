{% comment %}
  Hero Featured Products Slider - Dell風目玉製品スライダー

  使い方：
  1. 管理画面 > オンラインストア > テーマ > カスタマイズ
  2. 「セクションを追加」> 「Hero Featured Products」を選択
  3. ブロックを追加してスライドを作成
  4. 各スライドで画像、見出し、説明、価格、CTAを設定

  機能：
  - 自動再生（ON/OFF、間隔調整可能）
  - スワイプ/ドラッグ対応
  - キーボード操作対応（矢印キー）
  - レスポンシブ対応
  - アクセシビリティ対応（ARIA属性）
  - 外部ライブラリ不使用
{% endcomment %}

<style>
  .eg-hero-slider {
    position: relative;
    width: 100%;
    overflow: hidden;
    background: #000;
  }

  .eg-hero-slider[data-aspect="16-9"] {
    aspect-ratio: 16 / 9;
  }

  .eg-hero-slider[data-aspect="21-9"] {
    aspect-ratio: 21 / 9;
  }

  .eg-hero-slider[data-aspect="auto"] {
    min-height: 400px;
  }

  @media screen and (max-width: 749px) {
    .eg-hero-slider[data-aspect="16-9"],
    .eg-hero-slider[data-aspect="21-9"] {
      aspect-ratio: 4 / 3;
    }

    .eg-hero-slider[data-aspect="auto"] {
      min-height: 500px;
    }
  }

  .eg-hero-slider__track {
    display: flex;
    height: 100%;
    transition: transform 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .eg-hero-slider__slide {
    position: relative;
    flex: 0 0 100%;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
  }

  .eg-hero-slider__image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    user-select: none;
  }

  .eg-hero-slider__overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(to right, rgba(0, 0, 0, 0.5) 0%, transparent 60%);
    pointer-events: none;
  }

  .eg-hero-slider__slide[data-color-scheme="light"] .eg-hero-slider__overlay {
    background: linear-gradient(to right, rgba(255, 255, 255, 0.7) 0%, transparent 60%);
  }

  .eg-hero-slider__content {
    position: relative;
    z-index: 2;
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 4rem 2rem;
    color: #fff;
  }

  .eg-hero-slider__slide[data-color-scheme="light"] .eg-hero-slider__content {
    color: #000;
  }

  .eg-hero-slider__content--left {
    text-align: left;
  }

  .eg-hero-slider__content--center {
    text-align: center;
  }

  .eg-hero-slider__content--right {
    text-align: right;
  }

  .eg-hero-slider__heading {
    font-size: clamp(2.5rem, 5vw, 4.5rem);
    font-weight: 700;
    line-height: 1.1;
    margin: 0 0 1.5rem;
    max-width: 600px;
  }

  .eg-hero-slider__content--center .eg-hero-slider__heading {
    margin-left: auto;
    margin-right: auto;
  }

  .eg-hero-slider__content--right .eg-hero-slider__heading {
    margin-left: auto;
  }

  .eg-hero-slider__description {
    font-size: clamp(1.4rem, 2vw, 1.8rem);
    line-height: 1.6;
    margin: 0 0 1.5rem;
    max-width: 500px;
  }

  .eg-hero-slider__content--center .eg-hero-slider__description {
    margin-left: auto;
    margin-right: auto;
  }

  .eg-hero-slider__content--right .eg-hero-slider__description {
    margin-left: auto;
  }

  .eg-hero-slider__price {
    font-size: clamp(2rem, 3vw, 2.8rem);
    font-weight: 600;
    margin: 0 0 2rem;
  }

  .eg-hero-slider__cta {
    display: inline-block;
    padding: 1.4rem 3rem;
    font-size: 1.6rem;
    font-weight: 600;
    text-decoration: none;
    border-radius: 0.4rem;
    transition: all 0.3s ease;
    cursor: pointer;
  }

  .eg-hero-slider__cta--filled {
    background: #0071e3;
    color: #fff;
    border: 2px solid #0071e3;
  }

  .eg-hero-slider__cta--filled:hover {
    background: #0077ed;
    border-color: #0077ed;
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 113, 227, 0.3);
  }

  .eg-hero-slider__cta--outline {
    background: transparent;
    color: #fff;
    border: 2px solid #fff;
  }

  .eg-hero-slider__slide[data-color-scheme="light"] .eg-hero-slider__cta--outline {
    color: #000;
    border-color: #000;
  }

  .eg-hero-slider__cta--outline:hover {
    background: rgba(255, 255, 255, 0.1);
    transform: translateY(-2px);
  }

  .eg-hero-slider__slide[data-color-scheme="light"] .eg-hero-slider__cta--outline:hover {
    background: rgba(0, 0, 0, 0.05);
  }

  .eg-hero-slider__nav {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    z-index: 10;
    width: 100%;
    display: flex;
    justify-content: space-between;
    pointer-events: none;
    padding: 0 2rem;
  }

  .eg-hero-slider__arrow {
    pointer-events: auto;
    width: 5rem;
    height: 5rem;
    border-radius: 50%;
    background: rgba(0, 0, 0, 0.5);
    border: none;
    color: #fff;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    backdrop-filter: blur(10px);
  }

  .eg-hero-slider__arrow:hover {
    background: rgba(0, 0, 0, 0.7);
    transform: scale(1.1);
  }

  .eg-hero-slider__arrow:disabled {
    opacity: 0.3;
    cursor: not-allowed;
  }

  .eg-hero-slider__arrow svg {
    width: 2rem;
    height: 2rem;
  }

  .eg-hero-slider__dots {
    position: absolute;
    bottom: 2rem;
    left: 50%;
    transform: translateX(-50%);
    z-index: 10;
    display: flex;
    gap: 1rem;
  }

  .eg-hero-slider__dot {
    width: 1rem;
    height: 1rem;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.5);
    border: none;
    cursor: pointer;
    transition: all 0.3s ease;
    padding: 0;
  }

  .eg-hero-slider__dot:hover {
    background: rgba(255, 255, 255, 0.8);
    transform: scale(1.2);
  }

  .eg-hero-slider__dot--active {
    background: #fff;
    width: 3rem;
    border-radius: 0.5rem;
  }

  @media (prefers-reduced-motion: reduce) {
    .eg-hero-slider__track {
      transition: none;
    }

    .eg-hero-slider[data-autoplay="true"] {
      animation: none !important;
    }
  }

  @media screen and (max-width: 749px) {
    .eg-hero-slider__content {
      padding: 3rem 1.5rem;
    }

    .eg-hero-slider__heading {
      margin-bottom: 1rem;
    }

    .eg-hero-slider__description {
      margin-bottom: 1rem;
    }

    .eg-hero-slider__price {
      margin-bottom: 1.5rem;
    }

    .eg-hero-slider__cta {
      padding: 1.2rem 2.5rem;
      font-size: 1.4rem;
    }

    .eg-hero-slider__arrow {
      width: 4rem;
      height: 4rem;
    }

    .eg-hero-slider__nav {
      padding: 0 1rem;
    }
  }
</style>

<div
  class="eg-hero-slider"
  data-aspect="{{ section.settings.aspect_ratio }}"
  data-autoplay="{{ section.settings.autoplay }}"
  data-interval="{{ section.settings.interval }}"
  data-loop="{{ section.settings.loop }}"
  role="region"
  aria-roledescription="carousel"
  aria-label="Featured products"
>
  <div class="eg-hero-slider__track" role="list">
    {%- for block in section.blocks -%}
      {%- assign text_position = block.settings.text_position | default: section.settings.text_position -%}
      <div
        class="eg-hero-slider__slide"
        data-color-scheme="{{ block.settings.color_scheme }}"
        role="listitem"
        aria-roledescription="slide"
        aria-label="Slide {{ forloop.index }} of {{ section.blocks.size }}"
        {{ block.shopify_attributes }}
      >
        {%- if block.settings.image != blank -%}
          {%- assign image_height = block.settings.image.width | divided_by: block.settings.image.aspect_ratio | round -%}
          <img
            srcset="
              {%- if block.settings.image.width >= 375 -%}{{ block.settings.image | image_url: width: 375 }} 375w,{%- endif -%}
              {%- if block.settings.image.width >= 750 -%}{{ block.settings.image | image_url: width: 750 }} 750w,{%- endif -%}
              {%- if block.settings.image.width >= 1100 -%}{{ block.settings.image | image_url: width: 1100 }} 1100w,{%- endif -%}
              {%- if block.settings.image.width >= 1500 -%}{{ block.settings.image | image_url: width: 1500 }} 1500w,{%- endif -%}
              {%- if block.settings.image.width >= 1780 -%}{{ block.settings.image | image_url: width: 1780 }} 1780w,{%- endif -%}
              {%- if block.settings.image.width >= 2000 -%}{{ block.settings.image | image_url: width: 2000 }} 2000w,{%- endif -%}
              {%- if block.settings.image.width >= 3000 -%}{{ block.settings.image | image_url: width: 3000 }} 3000w,{%- endif -%}
              {%- if block.settings.image.width >= 3840 -%}{{ block.settings.image | image_url: width: 3840 }} 3840w{%- endif -%}
            "
            src="{{ block.settings.image | image_url: width: 1500 }}"
            sizes="100vw"
            alt="{{ block.settings.image_alt | default: block.settings.heading | strip_html | escape }}"
            loading="lazy"
            width="{{ block.settings.image.width }}"
            height="{{ image_height }}"
            class="eg-hero-slider__image"
          >
        {%- endif -%}

        <div class="eg-hero-slider__overlay"></div>

        <div class="eg-hero-slider__content eg-hero-slider__content--{{ text_position }}">
          {%- if block.settings.heading != blank -%}
            <h2 class="eg-hero-slider__heading">{{ block.settings.heading }}</h2>
          {%- endif -%}

          {%- if block.settings.description != blank -%}
            <div class="eg-hero-slider__description">{{ block.settings.description }}</div>
          {%- endif -%}

          {%- if block.settings.price != blank -%}
            <div class="eg-hero-slider__price">{{ block.settings.price }}</div>
          {%- endif -%}

          {%- if block.settings.cta_text != blank and block.settings.cta_link != blank -%}
            <a
              href="{{ block.settings.cta_link }}"
              class="eg-hero-slider__cta eg-hero-slider__cta--{{ section.settings.cta_style }}"
            >
              {{ block.settings.cta_text }}
            </a>
          {%- endif -%}
        </div>
      </div>
    {%- endfor -%}
  </div>

  {%- if section.settings.show_arrows and section.blocks.size > 1 -%}
    <div class="eg-hero-slider__nav">
      <button
        class="eg-hero-slider__arrow eg-hero-slider__arrow--prev"
        aria-label="Previous slide"
        type="button"
      >
        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <polyline points="15 18 9 12 15 6"></polyline>
        </svg>
      </button>
      <button
        class="eg-hero-slider__arrow eg-hero-slider__arrow--next"
        aria-label="Next slide"
        type="button"
      >
        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <polyline points="9 18 15 12 9 6"></polyline>
        </svg>
      </button>
    </div>
  {%- endif -%}

  {%- if section.settings.show_dots and section.blocks.size > 1 -%}
    <div class="eg-hero-slider__dots" role="tablist">
      {%- for block in section.blocks -%}
        <button
          class="eg-hero-slider__dot{% if forloop.first %} eg-hero-slider__dot--active{% endif %}"
          aria-label="Go to slide {{ forloop.index }}"
          role="tab"
          aria-selected="{% if forloop.first %}true{% else %}false{% endif %}"
          type="button"
        ></button>
      {%- endfor -%}
    </div>
  {%- endif -%}
</div>

<script>
(function() {
  class HeroSlider {
    constructor(element) {
      this.slider = element;
      this.track = this.slider.querySelector('.eg-hero-slider__track');
      this.slides = Array.from(this.slider.querySelectorAll('.eg-hero-slider__slide'));
      this.prevBtn = this.slider.querySelector('.eg-hero-slider__arrow--prev');
      this.nextBtn = this.slider.querySelector('.eg-hero-slider__arrow--next');
      this.dots = Array.from(this.slider.querySelectorAll('.eg-hero-slider__dot'));

      this.currentIndex = 0;
      this.isAutoplay = this.slider.dataset.autoplay === 'true';
      this.interval = parseInt(this.slider.dataset.interval) * 1000 || 5000;
      this.isLoop = this.slider.dataset.loop === 'true';
      this.autoplayTimer = null;
      this.isDragging = false;
      this.startPos = 0;
      this.currentTranslate = 0;
      this.prevTranslate = 0;
      this.animationID = 0;

      // Check prefers-reduced-motion
      const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;
      if (prefersReducedMotion) {
        this.isAutoplay = false;
      }

      this.init();
    }

    init() {
      if (this.slides.length <= 1) return;

      // Event listeners
      if (this.prevBtn) this.prevBtn.addEventListener('click', () => this.prev());
      if (this.nextBtn) this.nextBtn.addEventListener('click', () => this.next());

      this.dots.forEach((dot, index) => {
        dot.addEventListener('click', () => this.goToSlide(index));
      });

      // Keyboard navigation
      this.slider.addEventListener('keydown', (e) => {
        if (e.key === 'ArrowLeft') this.prev();
        if (e.key === 'ArrowRight') this.next();
      });

      // Touch events
      this.slides.forEach((slide, index) => {
        slide.addEventListener('touchstart', this.touchStart.bind(this, index), { passive: true });
        slide.addEventListener('touchmove', this.touchMove.bind(this), { passive: true });
        slide.addEventListener('touchend', this.touchEnd.bind(this));

        // Mouse events
        slide.addEventListener('mousedown', this.touchStart.bind(this, index));
        slide.addEventListener('mousemove', this.touchMove.bind(this));
        slide.addEventListener('mouseup', this.touchEnd.bind(this));
        slide.addEventListener('mouseleave', this.touchEnd.bind(this));
      });

      // Prevent context menu on long press
      this.slider.addEventListener('contextmenu', (e) => {
        if (this.isDragging) e.preventDefault();
      });

      // Autoplay
      if (this.isAutoplay) {
        this.startAutoplay();

        // Pause on hover
        this.slider.addEventListener('mouseenter', () => this.stopAutoplay());
        this.slider.addEventListener('mouseleave', () => this.startAutoplay());

        // Pause on focus
        this.slider.addEventListener('focusin', () => this.stopAutoplay());
        this.slider.addEventListener('focusout', () => this.startAutoplay());
      }

      this.updateSlider();
    }

    touchStart(index, event) {
      this.isDragging = true;
      this.startPos = this.getPositionX(event);
      this.animationID = requestAnimationFrame(this.animation.bind(this));
      this.slider.style.cursor = 'grabbing';
    }

    touchMove(event) {
      if (!this.isDragging) return;
      const currentPosition = this.getPositionX(event);
      this.currentTranslate = this.prevTranslate + currentPosition - this.startPos;
    }

    touchEnd() {
      this.isDragging = false;
      cancelAnimationFrame(this.animationID);

      const movedBy = this.currentTranslate - this.prevTranslate;

      // If moved enough, go to next/prev slide
      if (movedBy < -100 && this.currentIndex < this.slides.length - 1) {
        this.next();
      } else if (movedBy > 100 && this.currentIndex > 0) {
        this.prev();
      } else {
        this.updateSlider();
      }

      this.slider.style.cursor = 'grab';
    }

    getPositionX(event) {
      return event.type.includes('mouse') ? event.pageX : event.touches[0].clientX;
    }

    animation() {
      if (this.isDragging) {
        this.setSliderPosition();
        requestAnimationFrame(this.animation.bind(this));
      }
    }

    setSliderPosition() {
      this.track.style.transform = `translateX(${this.currentTranslate}px)`;
    }

    prev() {
      if (this.currentIndex > 0) {
        this.currentIndex--;
      } else if (this.isLoop) {
        this.currentIndex = this.slides.length - 1;
      }
      this.updateSlider();
    }

    next() {
      if (this.currentIndex < this.slides.length - 1) {
        this.currentIndex++;
      } else if (this.isLoop) {
        this.currentIndex = 0;
      }
      this.updateSlider();
    }

    goToSlide(index) {
      this.currentIndex = index;
      this.updateSlider();
    }

    updateSlider() {
      const translateX = -this.currentIndex * 100;
      this.track.style.transform = `translateX(${translateX}%)`;
      this.currentTranslate = translateX;
      this.prevTranslate = translateX;

      // Update dots
      this.dots.forEach((dot, index) => {
        if (index === this.currentIndex) {
          dot.classList.add('eg-hero-slider__dot--active');
          dot.setAttribute('aria-selected', 'true');
        } else {
          dot.classList.remove('eg-hero-slider__dot--active');
          dot.setAttribute('aria-selected', 'false');
        }
      });

      // Update arrows
      if (this.prevBtn) {
        this.prevBtn.disabled = !this.isLoop && this.currentIndex === 0;
      }
      if (this.nextBtn) {
        this.nextBtn.disabled = !this.isLoop && this.currentIndex === this.slides.length - 1;
      }

      // Update ARIA live region
      this.slider.setAttribute('aria-live', 'polite');
    }

    startAutoplay() {
      if (!this.isAutoplay || this.slides.length <= 1) return;

      this.stopAutoplay();
      this.autoplayTimer = setInterval(() => {
        this.next();
      }, this.interval);
    }

    stopAutoplay() {
      if (this.autoplayTimer) {
        clearInterval(this.autoplayTimer);
        this.autoplayTimer = null;
      }
    }
  }

  // Initialize all sliders
  document.addEventListener('DOMContentLoaded', () => {
    const sliders = document.querySelectorAll('.eg-hero-slider');
    sliders.forEach(slider => new HeroSlider(slider));
  });

  // Reinitialize on Shopify theme editor events
  if (window.Shopify && window.Shopify.designMode) {
    document.addEventListener('shopify:section:load', (event) => {
      const slider = event.target.querySelector('.eg-hero-slider');
      if (slider) new HeroSlider(slider);
    });
  }
})();
</script>

{% schema %}
{
  "name": "Hero Featured Products",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "header",
      "content": "スライダー設定"
    },
    {
      "type": "select",
      "id": "aspect_ratio",
      "label": "アスペクト比",
      "options": [
        {
          "value": "16-9",
          "label": "16:9"
        },
        {
          "value": "21-9",
          "label": "21:9（ワイド）"
        },
        {
          "value": "auto",
          "label": "自動"
        }
      ],
      "default": "21-9"
    },
    {
      "type": "checkbox",
      "id": "autoplay",
      "label": "自動再生",
      "default": true
    },
    {
      "type": "range",
      "id": "interval",
      "min": 3,
      "max": 10,
      "step": 1,
      "unit": "秒",
      "label": "自動再生間隔",
      "default": 5
    },
    {
      "type": "checkbox",
      "id": "loop",
      "label": "ループ再生",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_arrows",
      "label": "矢印を表示",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_dots",
      "label": "ドットを表示",
      "default": true
    },
    {
      "type": "header",
      "content": "コンテンツ設定"
    },
    {
      "type": "select",
      "id": "text_position",
      "label": "テキスト配置（デフォルト）",
      "options": [
        {
          "value": "left",
          "label": "左"
        },
        {
          "value": "center",
          "label": "中央"
        },
        {
          "value": "right",
          "label": "右"
        }
      ],
      "default": "left"
    },
    {
      "type": "select",
      "id": "cta_style",
      "label": "CTAスタイル",
      "options": [
        {
          "value": "filled",
          "label": "塗りつぶし"
        },
        {
          "value": "outline",
          "label": "アウトライン"
        }
      ],
      "default": "filled"
    }
  ],
  "blocks": [
    {
      "type": "slide",
      "name": "スライド",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "背景画像"
        },
        {
          "type": "text",
          "id": "image_alt",
          "label": "画像のAltテキスト",
          "info": "空欄の場合は見出しが使用されます"
        },
        {
          "type": "richtext",
          "id": "heading",
          "label": "見出し",
          "default": "<p>新製品登場</p>"
        },
        {
          "type": "richtext",
          "id": "description",
          "label": "説明",
          "default": "<p>最新テクノロジーで、あなたの生活を変える</p>"
        },
        {
          "type": "text",
          "id": "price",
          "label": "価格表示",
          "placeholder": "¥99,800から"
        },
        {
          "type": "text",
          "id": "cta_text",
          "label": "CTAテキスト",
          "default": "今すぐ購入"
        },
        {
          "type": "url",
          "id": "cta_link",
          "label": "CTAリンク"
        },
        {
          "type": "select",
          "id": "text_position",
          "label": "テキスト配置（このスライドのみ）",
          "options": [
            {
              "value": "left",
              "label": "左"
            },
            {
              "value": "center",
              "label": "中央"
            },
            {
              "value": "right",
              "label": "右"
            }
          ],
          "default": "left",
          "info": "空欄の場合はセクション設定が使用されます"
        },
        {
          "type": "select",
          "id": "color_scheme",
          "label": "配色",
          "options": [
            {
              "value": "dark",
              "label": "ダーク（白テキスト）"
            },
            {
              "value": "light",
              "label": "ライト（黒テキスト）"
            }
          ],
          "default": "dark"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Hero Featured Products",
      "blocks": [
        {
          "type": "slide"
        },
        {
          "type": "slide"
        },
        {
          "type": "slide"
        }
      ]
    }
  ]
}
{% endschema %}
